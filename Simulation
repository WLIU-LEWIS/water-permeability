function Simulation
 %
clear all;
clc;
format long;
global t0;
% a,b = k(1)、k(2)
k0 =[0.0001;80]; % Initial value, can be repeatedly substituted into the calculation
% lb = [0 0];   % Lower limit of the parameter
% ub = [100 100];    % Upper limit
x0 = 2167.61;  % the initial cell volume
% Experimental data (T Cell volume):
expdata= ...
[268.65	2209.211646
268.15	2229.836191
267.65	2076.341982
267.15	1962.598499
266.65	2013.32254
266.15	1887.592141
265.65	1848.943155
265.15	1850.838145
264.65	1771.909598
264.15	1728.457032
263.65	1692.320009
263.15	1661.647609
262.65	1637.629709
262.15	1618.283181
261.65	1594.44156
261.15	1581.352906
260.65	1566.325193
260.15	1547.948195
259.65	1525.693077
259.15	1517.584282
258.65	1502.292151
258.15	1492.993478
257.65	1478.230182
257.15	1467.389075
256.65	1465.317807
256.15	1455.886925
255.65	1449.805329
255.15	1440.550725
254.65	1436.937023
254.15	1428.740089
253.65	1425.126386
253.15	1420.763502
252.65	1418.339677
252.15	1415.739574
251.65	1413.095402
251.15	1411.949594
250.65	1409.746117
250.15	1407.939266
249.65	1407.101944
249.15	1406.176484
248.65	1404.193355
248.15	1403.003477
247.65	1401.461043
247.15	1400.006748
246.65	1398.86094
246.15	1397.979549
245.65	1397.803271
245.15	1396.745602
244.65	1396.92188
244.15	1396.657463
243.65	1396.393046
243.15	1396.393046];
t0=expdata(:,1);
yexp =expdata(:,2);         % yexp: [N1,N2]

% ------------------------------------------------------------------
% Using lsqnonlin() to calculate parameters
% k=lsqnonlin(@ObjFunc4LNL,k0,lb,ub,[],x0,yexp);
k=lsqnonlin(@ObjFunc4LNL,k0,[],[],[],x0,yexp);   

fprintf('\n\n Using lsqnonlin()to calculate parameters:\n')
fprintf('\ta = %.8e\n',k(1)) 
fprintf('\tb = %.8e\n',k(2))


% ---------Calculate Fit Statistics-------------------
tspan = t0';     % time
                           
[t,x] = ode45(@KineticEqs,tspan,x0,[],k);

fprintf('\nlsqnonlin:\n')
% Calculate the correlation coefficient
A=corrcoef(yexp(:,1),x(:,1));
fprintf('\n Correlation coefficient R:\n')
fprintf('\tR = %.8f\n',A(1,2))
% 
% Calculate the coefficient of determination
r(1)=1-sum((yexp(:,1)-x(:,1)).^2)./sum((yexp(:,1)-mean(yexp(:,1))).^2);
% ********************************coefficient of determination
fprintf('\n coefficient of determination R^2为:\n')
fprintf('\tR^2 = %.8f\n',r(1))

% Calculate Root Mean Squared Error
rmse(1)=sqrt(sum((yexp(:,1)-x(:,1)).^2)/length(t0));
fprintf('\n Root Mean Squared Error RMSE为:\n')
fprintf('\tRMSE = %.8f\n',rmse(1))
% 
% % Calculate the regression sum of squares SSR(Sum of Squares for regression)
% ssr(1)=sum((x(:,1)-mean(yexp(:,1))).^2);
% fprintf('\n sum of squares regression SSR为:\n')
% fprintf('\tSSR = %.8f\n',ssr(1))

% Calculate Sum of Squares for Error SSE
ssr(1)=sum((yexp(:,1)-x(:,1)).^2);
fprintf('\n SSE 为:\n')
fprintf('\tSSE = %.8f\n',ssr(1))

% ----------------------------------------------------
figure(1)
T=t-273.15;
V=x(:,1)/2167.61;
Y=t0-273.15;
Z=yexp(:,1)/2167.61;
plot(T,V,'b-',Y,Z,'ro'),legend('Model simluations (R^2=0.9902)','DSC data','Location','best')
xlabel('Temperature (℃)');ylabel('Normalized cell volume V/V0');
set(gca,'FontSize',13);
set(gca,'xdir','reverse');
set(gca,'ylim',[0.4,1.1])% Y limitaion [y1,y2]

%Remove the upper right coordinate
box off;
ax1 = axes('Position',get(gca,'Position'),...
    'XAxisLocation','top',...
    'YAxisLocation','right',...
   'Color','none',...
    'XColor','k','YColor','k');
set(ax1,'XTick',[]);
set(ax1,'YTick',[]);

% ------------------------------------------------------------------
function f = ObjFunc4LNL(k,x0,yexp)
tspan = t0';   
[t,x] = ode45(@KineticEqs,tspan,x0,[],k); 
f1 = x(:,1) - yexp(:,1);
f=f1; % The difference between the theoretical value and the experimental value, residual
end

% ------------------------------------------------------------------
function dydt = KineticEqs(t,y,k)   % Differential equations ,a,b分别为 k(1),k(2)
c= 809.97; % A_Cis the effective membrane area for water penetration
d= 8.314; % gas constant
e= 5; % Cooling rate
f= 18e012; % partial molar volume of water
g= 1400.80; % Impermeable volume of cells
h= 2; % dissociation constant of salt
ii= 3.33e-013; % moles of salt molecules in cells
jj= 333.88; % latent heat of ice
kk= 1e-012; % density of water
l= 273.15; % 参考温度
m= 5.42e-13;% reference temperature
p= 7.103e13; % Partial molar volume of CPAs

dydt = 1e18*k(1)*c*d*t*(exp(-k(2)/d*(1/t-1/l)))/(e*f)*(log((y-g-m*p)/(y-g-m*p+h*ii/f))-(jj*f*kk/d)*(1/l-1/t));
end
% ------------------------------------------------------------------
end
